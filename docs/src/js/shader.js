(function(_0x25c99e,_0x1bd6b7){const _0x5ae3d3=a0_0xadb0,_0xc52db1=_0x25c99e();while(!![]){try{const _0x5194ef=-parseInt(_0x5ae3d3(0x147))/0x1+parseInt(_0x5ae3d3(0x172))/0x2+parseInt(_0x5ae3d3(0x16a))/0x3+parseInt(_0x5ae3d3(0x15c))/0x4*(parseInt(_0x5ae3d3(0x183))/0x5)+-parseInt(_0x5ae3d3(0x17c))/0x6+-parseInt(_0x5ae3d3(0x151))/0x7*(parseInt(_0x5ae3d3(0x174))/0x8)+-parseInt(_0x5ae3d3(0x164))/0x9;if(_0x5194ef===_0x1bd6b7)break;else _0xc52db1['push'](_0xc52db1['shift']());}catch(_0x31b130){_0xc52db1['push'](_0xc52db1['shift']());}}}(a0_0x366d,0xa97aa));import*as a0_0x24e956 from'./main.js';let gl=null,program=null,texture=null,ctx2d=null,lut64=null,lut64Streng=null,lut64Profile=null,imageDataObj=null,fs=null,vs=null;function a0_0x366d(){const _0x3626ca=['901662PyXCOk','compileShader','FLOAT','getContext','width','webgl','TEXTURE_MAG_FILTER','5QnAshn','game_size','TEXTURE_2D','shaderSource','createBuffer','637255tsdxOC','getItem','createProgram','texParameteri','CLAMP_TO_EDGE','TEXTURE_MIN_FILTER','STATIC_DRAW','log','createTexture','slice','57491xmKonC','getAttribLocation','TRIANGLE_STRIP','uniform1f','RGBA','clearRect','getPixelData','height','attachShader','enableVertexAttribArray','getUniformLocation','4850068mMWpSN','UNSIGNED_BYTE','VERTEX_SHADER','precision\x20mediump\x20float;varying\x20vec2\x20v_texcoord;uniform\x20sampler2D\x20texture;void\x20main()\x20{gl_FragColor\x20=\x20texture2D(texture,\x20v_texcoord);}','texcoord','canvas','bindTexture','smooth_width','4383675YJMzjR','drawArrays','toLowerCase','webgl_full','bufferData','TEXTURE_WRAP_T','833256tIetKU','FRAGMENT_SHADER','warm','.bin','precision\x20mediump\x20float;varying\x20vec2\x20v_texcoord;uniform\x20sampler2D\x20texSampler;uniform\x20vec2\x20game_size;uniform\x20vec2\x20render_size;uniform\x20float\x20smooth_width;uniform\x20float\x20smooth_height;vec4\x20interpolate_color(vec2\x20tex_coord){vec2\x20ip=floor(tex_coord*game_size-0.5)+0.5;vec2\x20residual=fract(tex_coord*game_size+0.5);ip/=game_size;vec4\x20v0=texture2D(texSampler,ip);vec4\x20v1=texture2D(texSampler,ip+vec2(1.0,0.0)/game_size);vec4\x20v2=texture2D(texSampler,ip+vec2(0.0,1.0)/game_size);vec4\x20v3=texture2D(texSampler,ip+vec2(1.0,1.0)/game_size);vec2\x20smooth_dim=vec2(smooth_width,smooth_height);if(fract(render_size.x/game_size.x)*game_size.x<0.01)smooth_dim.x=0.01;if(fract(render_size.y/game_size.y)*game_size.y<0.01)smooth_dim.y=0.01;vec2\x20alpha=vec2(smoothstep(0.5-smooth_dim.x*0.5,0.5+smooth_dim.x*0.5,residual.x),smoothstep(0.5-smooth_dim.y*0.5,0.5+smooth_dim.y*0.5,residual.y));return\x20mix(mix(v0,v1,alpha.x),mix(v2,v3,alpha.x),alpha.y);}void\x20main(){gl_FragColor=interpolate_color(v_texcoord);}','attribute\x20vec2\x20position;attribute\x20vec2\x20texcoord;varying\x20vec2\x20v_texcoord;void\x20main()\x20{gl_Position\x20=\x20vec4(position,\x200.0,\x201.0);v_texcoord\x20=\x20texcoord;}','ARRAY_BUFFER','bindBuffer','2057590piONfB','smooth_height','536mmyACX','NEAREST','useProgram','COLOR_BUFFER_BIT','_streng','vertexAttribPointer','TEXTURE_WRAP_S','arrayBuffer'];a0_0x366d=function(){return _0x3626ca;};return a0_0x366d();}async function loadLUT64(){const _0x823571=a0_0xadb0;systemType=gameName[_0x823571(0x150)](-0x3);const _0x40d6b9=localStorage[_0x823571(0x148)](gameName+_0x823571(0x178))||'4.0',_0x3f707f=(localStorage[_0x823571(0x148)](gameName+'_temperature')||_0x823571(0x16c))[_0x823571(0x166)]();if(!lut64||lut64Streng!==_0x40d6b9||lut64Profile!==_0x3f707f){const _0x1158f0='./src/lut/lut64_'+_0x3f707f+'_'+_0x40d6b9+_0x823571(0x16d);console[_0x823571(0x14e)](_0x1158f0);const _0x3856b7=await fetch(_0x1158f0),_0x594bcd=await _0x3856b7[_0x823571(0x17b)]();lut64=new Uint8Array(_0x594bcd),lut64Streng=_0x40d6b9,lut64Profile=_0x3f707f;}}function setupWebGL_Shader(_0x59ce4e){const _0x84458=a0_0xadb0;gl=bufferCanvas['getContext'](_0x84458(0x181),{'alpha':![],'depth':![],'antialias':![],'premultipliedAlpha':![],'preserveDrawingBuffer':![],'powerPreference':'low-power'}),gl['viewport'](0x0,0x0,bufferCanvas[_0x84458(0x180)],bufferCanvas['height']);function _0x4407fa(_0x373e1e,_0x449eb8){const _0x5daddf=_0x84458,_0x730a46=gl['createShader'](_0x373e1e);return gl[_0x5daddf(0x145)](_0x730a46,_0x449eb8),gl[_0x5daddf(0x17d)](_0x730a46),_0x730a46;}vs=_0x84458(0x16f);if(_0x59ce4e===_0x84458(0x181))fs=_0x84458(0x15f);else _0x59ce4e==='webgl_full'&&(fs=_0x84458(0x16e));const _0x383e23=_0x4407fa(gl[_0x84458(0x15e)],vs),_0x49a251=_0x4407fa(gl[_0x84458(0x16b)],fs);return program=gl[_0x84458(0x149)](),gl[_0x84458(0x159)](program,_0x383e23),gl[_0x84458(0x159)](program,_0x49a251),gl['linkProgram'](program),gl[_0x84458(0x176)](program),program;}function a0_0xadb0(_0x6df6ed,_0x3a39ff){const _0x366d32=a0_0x366d();return a0_0xadb0=function(_0xadb068,_0x45c2df){_0xadb068=_0xadb068-0x143;let _0xd713f3=_0x366d32[_0xadb068];return _0xd713f3;},a0_0xadb0(_0x6df6ed,_0x3a39ff);}function setupTexture_Buffer(_0x1570d7){const _0x37ea4d=a0_0xadb0;texture=gl[_0x37ea4d(0x14f)](),gl[_0x37ea4d(0x162)](gl[_0x37ea4d(0x144)],texture),gl[_0x37ea4d(0x14a)](gl['TEXTURE_2D'],gl[_0x37ea4d(0x14c)],gl['NEAREST']),gl[_0x37ea4d(0x14a)](gl[_0x37ea4d(0x144)],gl[_0x37ea4d(0x182)],gl[_0x37ea4d(0x175)]),gl[_0x37ea4d(0x14a)](gl[_0x37ea4d(0x144)],gl[_0x37ea4d(0x17a)],gl[_0x37ea4d(0x14b)]),gl[_0x37ea4d(0x14a)](gl[_0x37ea4d(0x144)],gl[_0x37ea4d(0x169)],gl[_0x37ea4d(0x14b)]);_0x1570d7===_0x37ea4d(0x167)&&(gl['uniform2f'](gl[_0x37ea4d(0x15b)](program,_0x37ea4d(0x143)),gameWidth,gameHeight),gl['uniform2f'](gl[_0x37ea4d(0x15b)](program,'render_size'),gl[_0x37ea4d(0x161)]['width'],gl['canvas'][_0x37ea4d(0x158)]),gl[_0x37ea4d(0x154)](gl[_0x37ea4d(0x15b)](program,_0x37ea4d(0x163)),gameWidth/gl[_0x37ea4d(0x161)][_0x37ea4d(0x180)]),gl[_0x37ea4d(0x154)](gl['getUniformLocation'](program,_0x37ea4d(0x173)),gameHeight/gl[_0x37ea4d(0x161)][_0x37ea4d(0x158)]));const _0x16d473=gl[_0x37ea4d(0x146)]();gl['bindBuffer'](gl[_0x37ea4d(0x170)],_0x16d473),gl['bufferData'](gl['ARRAY_BUFFER'],new Float32Array([-0x1,-0x1,0x1,-0x1,-0x1,0x1,0x1,0x1]),gl[_0x37ea4d(0x14d)]),gl[_0x37ea4d(0x179)](gl['getAttribLocation'](program,'position'),0x2,gl['FLOAT'],![],0x0,0x0),gl['enableVertexAttribArray'](gl[_0x37ea4d(0x152)](program,'position'));const _0x9dbf5e=gl[_0x37ea4d(0x146)]();gl[_0x37ea4d(0x171)](gl[_0x37ea4d(0x170)],_0x9dbf5e),gl[_0x37ea4d(0x168)](gl[_0x37ea4d(0x170)],new Float32Array([0x0,0x1,0x1,0x1,0x0,0x0,0x1,0x0]),gl[_0x37ea4d(0x14d)]),gl[_0x37ea4d(0x179)](gl[_0x37ea4d(0x152)](program,_0x37ea4d(0x160)),0x2,gl[_0x37ea4d(0x17e)],![],0x0,0x0),gl[_0x37ea4d(0x15a)](gl['getAttribLocation'](program,'texcoord'));}function setup2DContext(){const _0x295207=a0_0xadb0;ctx2d=bufferCanvas[_0x295207(0x17f)]('2d'),ctx2d['imageSmoothingEnabled']=![];}async function renderPixel(_0x119fa2){const _0x2647f4=a0_0xadb0,_0x1801cd=a0_0x24e956[_0x2647f4(0x157)]();if(!_0x1801cd)return;const _0x1824ba=new Uint8ClampedArray(gameWidth*gameHeight*0x4);for(let _0x5af575=0x0;_0x5af575<gameHeight;_0x5af575++){for(let _0x2d5bcd=0x0;_0x2d5bcd<gameWidth;_0x2d5bcd++){const _0x1991ee=_0x5af575*gameStride+_0x2d5bcd,_0x428db4=(_0x5af575*gameWidth+_0x2d5bcd)*0x4,_0x190c1e=_0x1801cd[_0x1991ee],_0x48e99b=_0x190c1e&0xff,_0xf712c9=_0x190c1e>>0x8&0xff,_0x43f5ed=_0x190c1e>>0x10&0xff;_0x1824ba[_0x428db4]=_0x48e99b,_0x1824ba[_0x428db4+0x1]=_0xf712c9,_0x1824ba[_0x428db4+0x2]=_0x43f5ed,_0x1824ba[_0x428db4+0x3]=0xff;}}if(_0x119fa2===_0x2647f4(0x181))gl['texImage2D'](gl[_0x2647f4(0x144)],0x0,gl['RGBA'],gameWidth,gameHeight,0x0,gl[_0x2647f4(0x155)],gl[_0x2647f4(0x15d)],_0x1824ba),gl['clear'](gl[_0x2647f4(0x177)]),gl[_0x2647f4(0x165)](gl[_0x2647f4(0x153)],0x0,0x4);else _0x119fa2==='2d'&&(imageDataObj=new ImageData(_0x1824ba,gameWidth,gameHeight),createImageBitmap(imageDataObj)['then'](_0x5476a1=>{const _0x127c66=_0x2647f4;ctx2d[_0x127c66(0x156)](0x0,0x0,bufferCanvas[_0x127c66(0x180)],bufferCanvas[_0x127c66(0x158)]),ctx2d['drawImage'](_0x5476a1,0x0,0x0);}));requestAnimationFrame(()=>renderPixel(_0x119fa2));}export async function switchRenderMode(_0x529d1a){const _0x39bd98=a0_0xadb0;systemType=gameName[_0x39bd98(0x150)](-0x3);if(_0x529d1a==='2d')setupStyle('2d'),setup2DContext(),renderPixel('2d');else{if(_0x529d1a===_0x39bd98(0x181))setupStyle('2d'),setupWebGL_Shader(_0x39bd98(0x181)),setupTexture_Buffer(_0x39bd98(0x181)),renderPixel(_0x39bd98(0x181));else _0x529d1a===_0x39bd98(0x167)&&(setupStyle('webgl_full'),setupWebGL_Shader(_0x39bd98(0x167)),setupTexture_Buffer('webgl_full'),renderPixel(_0x39bd98(0x181)));}}